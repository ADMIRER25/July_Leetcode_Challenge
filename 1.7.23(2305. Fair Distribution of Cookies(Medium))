class Solution {
    void helper(vector<int>& cookies,vector<int>child,int &ans,int ind)
    {

        if(ind >= cookies.size())
        {
            //we have to find the maximum int child array 
            int maxi = *max_element(child.begin(),child.end());

            //ans will be the minimum of maximum
            ans = min(ans,maxi);
            return;
        }
        // we can distribute this cookie in k children 
        for(int i = 0; i < child.size();i++)
        {
            //i the child no suppose 0th cokkie is of the 0th child
            child[i] += cookies[ind];
            int maxi = *max_element(child.begin(),child.end());
            
            if(maxi < ans) helper(cookies,child,ans,ind+1);
            
            //backtrack
            child[i] -= cookies[ind];

        }
    }
public:
    int distributeCookies(vector<int>& cookies, int k)
    {
        vector<int>child(k,0);
        int ans = INT_MAX;
        helper(cookies,child,ans,0);
        return ans;
    }
};
